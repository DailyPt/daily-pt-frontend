{"ast":null,"code":"export var IosAlertStyle;(function(IosAlertStyle){IosAlertStyle[IosAlertStyle[\"NONE\"]=0]=\"NONE\";IosAlertStyle[IosAlertStyle[\"BANNER\"]=1]=\"BANNER\";IosAlertStyle[IosAlertStyle[\"ALERT\"]=2]=\"ALERT\";})(IosAlertStyle||(IosAlertStyle={}));export var IosAllowsPreviews;(function(IosAllowsPreviews){IosAllowsPreviews[IosAllowsPreviews[\"NEVER\"]=0]=\"NEVER\";IosAllowsPreviews[IosAllowsPreviews[\"ALWAYS\"]=1]=\"ALWAYS\";IosAllowsPreviews[IosAllowsPreviews[\"WHEN_AUTHENTICATED\"]=2]=\"WHEN_AUTHENTICATED\";})(IosAllowsPreviews||(IosAllowsPreviews={}));export var IosAuthorizationStatus;(function(IosAuthorizationStatus){IosAuthorizationStatus[IosAuthorizationStatus[\"NOT_DETERMINED\"]=0]=\"NOT_DETERMINED\";IosAuthorizationStatus[IosAuthorizationStatus[\"DENIED\"]=1]=\"DENIED\";IosAuthorizationStatus[IosAuthorizationStatus[\"AUTHORIZED\"]=2]=\"AUTHORIZED\";IosAuthorizationStatus[IosAuthorizationStatus[\"PROVISIONAL\"]=3]=\"PROVISIONAL\";IosAuthorizationStatus[IosAuthorizationStatus[\"EPHEMERAL\"]=4]=\"EPHEMERAL\";})(IosAuthorizationStatus||(IosAuthorizationStatus={}));","map":{"version":3,"names":["IosAlertStyle","IosAllowsPreviews","IosAuthorizationStatus"],"sources":["/Users/jinwook/react-native/daily-pt-frontend/node_modules/expo-notifications/src/NotificationPermissions.types.ts"],"sourcesContent":["import { PermissionResponse, PermissionHookOptions } from 'expo-modules-core';\n\nexport enum IosAlertStyle {\n  NONE = 0,\n  BANNER = 1,\n  ALERT = 2,\n}\n\nexport enum IosAllowsPreviews {\n  NEVER = 0,\n  ALWAYS = 1,\n  WHEN_AUTHENTICATED = 2,\n}\n\nexport enum IosAuthorizationStatus {\n  NOT_DETERMINED = 0,\n  DENIED = 1,\n  AUTHORIZED = 2,\n  PROVISIONAL = 3,\n  EPHEMERAL = 4,\n}\n\nexport { PermissionHookOptions };\n\n// @docsMissing\nexport interface NotificationPermissionsStatus extends PermissionResponse {\n  android?: {\n    importance: number;\n    interruptionFilter?: number;\n  };\n  ios?: {\n    status: IosAuthorizationStatus;\n    allowsDisplayInNotificationCenter: boolean | null;\n    allowsDisplayOnLockScreen: boolean | null;\n    allowsDisplayInCarPlay: boolean | null;\n    allowsAlert: boolean | null;\n    allowsBadge: boolean | null;\n    allowsSound: boolean | null;\n    allowsCriticalAlerts?: boolean | null;\n    alertStyle: IosAlertStyle;\n    allowsPreviews?: IosAllowsPreviews;\n    providesAppNotificationSettings?: boolean;\n    allowsAnnouncements?: boolean | null;\n  };\n}\n\n/**\n * Available configuration for permission request on iOS platform.\n * See Apple documentation for [`UNAuthorizationOptions`](https://developer.apple.com/documentation/usernotifications/unauthorizationoptions) to learn more.\n */\nexport interface IosNotificationPermissionsRequest {\n  /**\n   * The ability to display alerts.\n   */\n  allowAlert?: boolean;\n  /**\n   * The ability to update the appâ€™s badge.\n   */\n  allowBadge?: boolean;\n  /**\n   * The ability to play sounds.\n   */\n  allowSound?: boolean;\n  /**\n   * The ability to display notifications in a CarPlay environment.\n   */\n  allowDisplayInCarPlay?: boolean;\n  /**\n   * The ability to play sounds for critical alerts.\n   */\n  allowCriticalAlerts?: boolean;\n  /**\n   * An option indicating the system should display a button for in-app notification settings.\n   */\n  provideAppNotificationSettings?: boolean;\n  /**\n   * The ability to post noninterrupting notifications provisionally to the Notification Center.\n   */\n  allowProvisional?: boolean;\n  /**\n   * The ability for Siri to automatically read out messages over AirPods.\n   * @deprecated\n   */\n  allowAnnouncements?: boolean;\n}\n\nexport type NativeNotificationPermissionsRequest = IosNotificationPermissionsRequest | object;\n\n/**\n * An interface representing the permissions request scope configuration.\n * Each option corresponds to a different native platform authorization option.\n */\nexport interface NotificationPermissionsRequest {\n  /**\n   * Available configuration for permission request on iOS platform.\n   */\n  ios?: IosNotificationPermissionsRequest;\n  /**\n   * On Android, all available permissions are granted by default, and if a user declines any permission, an app cannot prompt the user to change.\n   */\n  android?: object;\n}\n"],"mappings":"AAEA,UAAY,CAAAA,aAIX,CAJD,UAAYA,aAAa,EACvBA,aAAA,CAAAA,aAAA,kBAAQ,CACRA,aAAA,CAAAA,aAAA,sBAAU,CACVA,aAAA,CAAAA,aAAA,oBAAS,CACX,CAAC,EAJWA,aAAa,GAAbA,aAAa,MAMzB,UAAY,CAAAC,iBAIX,CAJD,UAAYA,iBAAiB,EAC3BA,iBAAA,CAAAA,iBAAA,oBAAS,CACTA,iBAAA,CAAAA,iBAAA,sBAAU,CACVA,iBAAA,CAAAA,iBAAA,8CAAsB,CACxB,CAAC,EAJWA,iBAAiB,GAAjBA,iBAAiB,MAM7B,UAAY,CAAAC,sBAMX,CAND,UAAYA,sBAAsB,EAChCA,sBAAA,CAAAA,sBAAA,sCAAkB,CAClBA,sBAAA,CAAAA,sBAAA,sBAAU,CACVA,sBAAA,CAAAA,sBAAA,8BAAc,CACdA,sBAAA,CAAAA,sBAAA,gCAAe,CACfA,sBAAA,CAAAA,sBAAA,4BAAa,CACf,CAAC,EANWA,sBAAsB,GAAtBA,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}