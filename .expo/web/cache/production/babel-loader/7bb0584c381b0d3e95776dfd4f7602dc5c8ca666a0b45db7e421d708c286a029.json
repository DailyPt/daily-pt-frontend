{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import AuthContent from\"../../components/AuthContent\";import{signIn}from\"../../api/auth\";import{useContext,useState}from'react';import LoadingOverlay from\"../../components/LoadingOverlay\";import Alert from\"react-native-web/dist/exports/Alert\";import{AuthContext}from\"../../store/auth-context\";import{jsx as _jsx}from\"react/jsx-runtime\";var SignInScreen=function SignInScreen(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isAuthenticating=_useState2[0],setIsAuthenticating=_useState2[1];var authContext=useContext(AuthContext);var signInHandler=function(){var _ref2=_asyncToGenerator(function*(_ref){var email=_ref.email,password=_ref.password;setIsAuthenticating(true);try{var userCredential=yield signIn(email,password);authContext.authenticate(userCredential);}catch(e){Alert.alert('로그인 실패','이메일과 비밀번호를 확인하세요!');setIsAuthenticating(false);}});return function signInHandler(_x){return _ref2.apply(this,arguments);};}();if(isAuthenticating){return _jsx(LoadingOverlay,{message:\"\\uB85C\\uADF8\\uC778 \\uC911...\"});}return _jsx(AuthContent,{isLogin:true,onAuthenticate:signInHandler});};export default SignInScreen;","map":{"version":3,"names":["AuthContent","signIn","useContext","useState","LoadingOverlay","Alert","AuthContext","jsx","_jsx","SignInScreen","_useState","_useState2","_slicedToArray","isAuthenticating","setIsAuthenticating","authContext","signInHandler","_ref2","_asyncToGenerator","_ref","email","password","userCredential","authenticate","e","alert","_x","apply","arguments","message","isLogin","onAuthenticate"],"sources":["/Users/jinwook/react-native/daily-pt-frontend/src/screens/AuthenticationScreen/SignInScreen.js"],"sourcesContent":["import AuthContent from '../../components/AuthContent';\nimport { signIn } from '../../api/auth';\nimport { useContext, useState } from 'react';\nimport LoadingOverlay from '../../components/LoadingOverlay';\nimport { Alert } from 'react-native';\nimport { AuthContext } from '../../store/auth-context';\n\nconst SignInScreen = () => {\n  const [isAuthenticating, setIsAuthenticating] = useState(false);\n  const authContext = useContext(AuthContext);\n\n  const signInHandler = async ({ email, password }) => {\n    setIsAuthenticating(true);\n    try {\n      const userCredential = await signIn(email, password);\n      authContext.authenticate(userCredential);\n    } catch (e) {\n      Alert.alert('로그인 실패', '이메일과 비밀번호를 확인하세요!');\n      setIsAuthenticating(false);\n    }\n  };\n\n  if (isAuthenticating) {\n    return <LoadingOverlay message=\"로그인 중...\" />;\n  }\n  return <AuthContent isLogin onAuthenticate={signInHandler} />;\n};\n\nexport default SignInScreen;\n"],"mappings":"wIAAA,MAAO,CAAAA,WAAW,oCAClB,OAASC,MAAM,sBACf,OAASC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAC5C,MAAO,CAAAC,cAAc,uCAAwC,OAAAC,KAAA,2CAE7D,OAASC,WAAW,gCAAmC,OAAAC,GAAA,IAAAC,IAAA,yBAEvD,GAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAA,CAAS,CACzB,IAAAC,SAAA,CAAgDP,QAAQ,CAAC,KAAK,CAAC,CAAAQ,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAxDG,gBAAgB,CAAAF,UAAA,IAAEG,mBAAmB,CAAAH,UAAA,IAC5C,GAAM,CAAAI,WAAW,CAAGb,UAAU,CAACI,WAAW,CAAC,CAE3C,GAAM,CAAAU,aAAa,gBAAAC,KAAA,CAAAC,iBAAA,CAAG,UAAAC,IAAA,CAA+B,IAAtB,CAAAC,KAAK,CAAAD,IAAA,CAALC,KAAK,CAAEC,QAAQ,CAAAF,IAAA,CAARE,QAAQ,CAC5CP,mBAAmB,CAAC,IAAI,CAAC,CACzB,GAAI,CACF,GAAM,CAAAQ,cAAc,MAAS,CAAArB,MAAM,CAACmB,KAAK,CAAEC,QAAQ,CAAC,CACpDN,WAAW,CAACQ,YAAY,CAACD,cAAc,CAAC,CAC1C,CAAE,MAAOE,CAAC,CAAE,CACVnB,KAAK,CAACoB,KAAK,CAAC,QAAQ,CAAE,mBAAmB,CAAC,CAC1CX,mBAAmB,CAAC,KAAK,CAAC,CAC5B,CACF,CAAC,iBATK,CAAAE,aAAaA,CAAAU,EAAA,SAAAT,KAAA,CAAAU,KAAA,MAAAC,SAAA,OASlB,CAED,GAAIf,gBAAgB,CAAE,CACpB,MAAO,CAAAL,IAAA,CAACJ,cAAc,EAACyB,OAAO,CAAC,8BAAU,EAAG,CAC9C,CACA,MAAO,CAAArB,IAAA,CAACR,WAAW,EAAC8B,OAAO,MAACC,cAAc,CAAEf,aAAc,EAAG,CAC/D,CAAC,CAED,cAAe,CAAAP,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}