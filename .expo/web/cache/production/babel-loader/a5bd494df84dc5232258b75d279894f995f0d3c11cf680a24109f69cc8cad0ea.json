{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import{UnavailabilityError}from'expo-modules-core';import{v4 as uuidv4}from'uuid';import NotificationPresenter from\"./NotificationPresenterModule\";var warningMessageShown=false;export default function presentNotificationAsync(_x){return _presentNotificationAsync.apply(this,arguments);}function _presentNotificationAsync(){_presentNotificationAsync=_asyncToGenerator(function*(content){var identifier=arguments.length>1&&arguments[1]!==undefined?arguments[1]:uuidv4();if(__DEV__&&!warningMessageShown){console.warn('`presentNotificationAsync` has been deprecated in favor of using `scheduleNotificationAsync` + an explicit notification handler. Read more at https://expo.fyi/presenting-notifications-deprecated.');warningMessageShown=true;}if(!NotificationPresenter.presentNotificationAsync){throw new UnavailabilityError('Notifications','presentNotificationAsync');}return yield NotificationPresenter.presentNotificationAsync(identifier,content);});return _presentNotificationAsync.apply(this,arguments);}","map":{"version":3,"names":["UnavailabilityError","v4","uuidv4","NotificationPresenter","warningMessageShown","presentNotificationAsync","_x","_presentNotificationAsync","apply","arguments","_asyncToGenerator","content","identifier","length","undefined","__DEV__","console","warn"],"sources":["/Users/jinwook/react-native/daily-pt-frontend/node_modules/expo-notifications/src/presentNotificationAsync.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport NotificationPresenter from './NotificationPresenterModule';\nimport { NotificationContentInput } from './Notifications.types';\n\nlet warningMessageShown = false;\n\n/**\n * Schedules a notification for immediate trigger.\n * @param content An object representing the notification content.\n * @param identifier\n * @return It returns a Promise resolving with the notification's identifier once the notification is successfully scheduled for immediate display.\n * @header schedule\n * @deprecated This method has been deprecated in favor of using an explicit `NotificationHandler` and the [`scheduleNotificationAsync`](#notificationsschedulenotificationasyncrequest) method. More information can be found in our [FYI document](https://expo.fyi/presenting-notifications-deprecated).\n */\nexport default async function presentNotificationAsync(\n  content: NotificationContentInput,\n  identifier: string = uuidv4()\n): Promise<string> {\n  if (__DEV__ && !warningMessageShown) {\n    console.warn(\n      '`presentNotificationAsync` has been deprecated in favor of using `scheduleNotificationAsync` + an explicit notification handler. Read more at https://expo.fyi/presenting-notifications-deprecated.'\n    );\n    warningMessageShown = true;\n  }\n\n  if (!NotificationPresenter.presentNotificationAsync) {\n    throw new UnavailabilityError('Notifications', 'presentNotificationAsync');\n  }\n\n  return await NotificationPresenter.presentNotificationAsync(identifier, content);\n}\n"],"mappings":"uEAAA,OAASA,mBAAmB,KAAQ,mBAAmB,CACvD,OAASC,EAAE,GAAI,CAAAC,MAAM,KAAQ,MAAM,CAEnC,MAAO,CAAAC,qBAAqB,qCAG5B,GAAI,CAAAC,mBAAmB,CAAG,KAAK,CAU/B,uBAA8B,CAAAC,wBAAwBA,CAAAC,EAAA,SAAAC,yBAAA,CAAAC,KAAA,MAAAC,SAAA,GAgBrD,SAAAF,0BAAA,EAAAA,yBAAA,CAAAG,iBAAA,CAhBc,UACbC,OAAiC,CACJ,IAA7B,CAAAC,UAAA,CAAAH,SAAA,CAAAI,MAAA,IAAAJ,SAAA,MAAAK,SAAA,CAAAL,SAAA,IAAqBP,MAAM,EAAE,CAE7B,GAAIa,OAAO,EAAI,CAACX,mBAAmB,CAAE,CACnCY,OAAO,CAACC,IAAI,CACV,qMAAqM,CACtM,CACDb,mBAAmB,CAAG,IAAI,C,CAG5B,GAAI,CAACD,qBAAqB,CAACE,wBAAwB,CAAE,CACnD,KAAM,IAAI,CAAAL,mBAAmB,CAAC,eAAe,CAAE,0BAA0B,CAAC,C,CAG5E,YAAa,CAAAG,qBAAqB,CAACE,wBAAwB,CAACO,UAAU,CAAED,OAAO,CAAC,CAClF,CAAC,SAAAJ,yBAAA,CAAAC,KAAA,MAAAC,SAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}