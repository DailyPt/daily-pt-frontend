{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import{UnavailabilityError}from'expo-modules-core';import NotificationCategoriesModule from\"./NotificationCategoriesModule.native\";export default function setNotificationCategoryAsync(_x,_x2,_x3){return _setNotificationCategoryAsync.apply(this,arguments);}function _setNotificationCategoryAsync(){_setNotificationCategoryAsync=_asyncToGenerator(function*(identifier,actions,options){if(!NotificationCategoriesModule.setNotificationCategoryAsync){throw new UnavailabilityError('Notifications','setNotificationCategoryAsync');}return yield NotificationCategoriesModule.setNotificationCategoryAsync(identifier,actions,options);});return _setNotificationCategoryAsync.apply(this,arguments);}","map":{"version":3,"names":["UnavailabilityError","NotificationCategoriesModule","setNotificationCategoryAsync","_x","_x2","_x3","_setNotificationCategoryAsync","apply","arguments","_asyncToGenerator","identifier","actions","options"],"sources":["/Users/jinwook/react-native/daily-pt-frontend/node_modules/expo-notifications/src/setNotificationCategoryAsync.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport NotificationCategoriesModule from './NotificationCategoriesModule.native';\nimport {\n  NotificationCategory,\n  NotificationAction,\n  NotificationCategoryOptions,\n} from './Notifications.types';\n\n/**\n * Sets the new notification category.\n * @param identifier A string to associate as the ID of this category. You will pass this string in as the `categoryIdentifier`\n * in your [`NotificationContent`](#notificationcontent) to associate a notification with this category.\n * > Don't use the characters `:` or `-` in your category identifier. If you do, categories might not work as expected.\n * @param actions An array of [`NotificationAction`s](#notificationaction), which describe the actions associated with this category.\n * @param options An optional object of additional configuration options for your category.\n * @return A Promise which resolves to the category you just have created.\n * @platform android\n * @platform ios\n * @header categories\n */\nexport default async function setNotificationCategoryAsync(\n  identifier: string,\n  actions: NotificationAction[],\n  options?: NotificationCategoryOptions\n): Promise<NotificationCategory> {\n  if (!NotificationCategoriesModule.setNotificationCategoryAsync) {\n    throw new UnavailabilityError('Notifications', 'setNotificationCategoryAsync');\n  }\n\n  return await NotificationCategoriesModule.setNotificationCategoryAsync(\n    identifier,\n    actions,\n    options\n  );\n}\n"],"mappings":"uEAAA,OAASA,mBAAmB,KAAQ,mBAAmB,CAEvD,MAAO,CAAAC,4BAA4B,6CAmBnC,uBAA8B,CAAAC,4BAA4BA,CAAAC,EAAA,CAAAC,GAAA,CAAAC,GAAA,SAAAC,6BAAA,CAAAC,KAAA,MAAAC,SAAA,GAczD,SAAAF,8BAAA,EAAAA,6BAAA,CAAAG,iBAAA,CAdc,UACbC,UAAkB,CAClBC,OAA6B,CAC7BC,OAAqC,EAErC,GAAI,CAACX,4BAA4B,CAACC,4BAA4B,CAAE,CAC9D,KAAM,IAAI,CAAAF,mBAAmB,CAAC,eAAe,CAAE,8BAA8B,CAAC,C,CAGhF,YAAa,CAAAC,4BAA4B,CAACC,4BAA4B,CACpEQ,UAAU,CACVC,OAAO,CACPC,OAAO,CACR,CACH,CAAC,SAAAN,6BAAA,CAAAC,KAAA,MAAAC,SAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}