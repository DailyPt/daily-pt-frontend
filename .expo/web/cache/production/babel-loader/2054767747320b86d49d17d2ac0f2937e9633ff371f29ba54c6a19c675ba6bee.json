{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _createClass from\"@babel/runtime/helpers/createClass\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import{EventEmitter,CodedError,UnavailabilityError}from'expo-modules-core';import NotificationsHandlerModule from\"./NotificationsHandlerModule\";export var NotificationTimeoutError=function(_CodedError){_inherits(NotificationTimeoutError,_CodedError);var _super=_createSuper(NotificationTimeoutError);function NotificationTimeoutError(notificationId,notification){var _this;_classCallCheck(this,NotificationTimeoutError);_this=_super.call(this,'ERR_NOTIFICATION_TIMEOUT',\"Notification handling timed out for ID \"+notificationId+\".\");_this.info={id:notificationId,notification:notification};return _this;}return _createClass(NotificationTimeoutError);}(CodedError);var notificationEmitter=new EventEmitter(NotificationsHandlerModule);var handleNotificationEventName='onHandleNotification';var handleNotificationTimeoutEventName='onHandleNotificationTimeout';var handleSubscription=null;var handleTimeoutSubscription=null;export function setNotificationHandler(handler){if(handleSubscription){handleSubscription.remove();handleSubscription=null;}if(handleTimeoutSubscription){handleTimeoutSubscription.remove();handleTimeoutSubscription=null;}if(handler){handleSubscription=notificationEmitter.addListener(handleNotificationEventName,function(){var _ref2=_asyncToGenerator(function*(_ref){var id=_ref.id,notification=_ref.notification;if(!NotificationsHandlerModule.handleNotificationAsync){handler.handleError==null?void 0:handler.handleError(id,new UnavailabilityError('Notifications','handleNotificationAsync'));return;}try{var behavior=yield handler.handleNotification(notification);yield NotificationsHandlerModule.handleNotificationAsync(id,behavior);handler.handleSuccess==null?void 0:handler.handleSuccess(id);}catch(error){handler.handleError==null?void 0:handler.handleError(id,error);}});return function(_x){return _ref2.apply(this,arguments);};}());handleTimeoutSubscription=notificationEmitter.addListener(handleNotificationTimeoutEventName,function(_ref3){var id=_ref3.id,notification=_ref3.notification;return handler.handleError==null?void 0:handler.handleError(id,new NotificationTimeoutError(id,notification));});}}","map":{"version":3,"names":["EventEmitter","CodedError","UnavailabilityError","NotificationsHandlerModule","NotificationTimeoutError","_CodedError","_inherits","_super","_createSuper","notificationId","notification","_this","_classCallCheck","call","info","id","_createClass","notificationEmitter","handleNotificationEventName","handleNotificationTimeoutEventName","handleSubscription","handleTimeoutSubscription","setNotificationHandler","handler","remove","addListener","_ref2","_asyncToGenerator","_ref","handleNotificationAsync","handleError","behavior","handleNotification","handleSuccess","error","_x","apply","arguments","_ref3"],"sources":["/Users/jinwook/react-native/daily-pt-frontend/node_modules/expo-notifications/src/NotificationsHandler.ts"],"sourcesContent":["import { EventEmitter, Subscription, CodedError, UnavailabilityError } from 'expo-modules-core';\n\nimport { Notification, NotificationBehavior } from './Notifications.types';\nimport NotificationsHandlerModule from './NotificationsHandlerModule';\n\n/**\n * @hidden\n */\nexport class NotificationTimeoutError extends CodedError {\n  info: { notification: Notification; id: string };\n  constructor(notificationId: string, notification: Notification) {\n    super('ERR_NOTIFICATION_TIMEOUT', `Notification handling timed out for ID ${notificationId}.`);\n    this.info = { id: notificationId, notification };\n  }\n}\n\n// @docsMissing\nexport type NotificationHandlingError = NotificationTimeoutError | Error;\n\nexport interface NotificationHandler {\n  /**\n   * A function accepting an incoming notification returning a `Promise` resolving to a behavior ([`NotificationBehavior`](#notificationbehavior))\n   * applicable to the notification\n   * @param notification An object representing the notification.\n   */\n  handleNotification: (notification: Notification) => Promise<NotificationBehavior>;\n  /**\n   * A function called whenever an incoming notification is handled successfully.\n   * @param notificationId Identifier of the notification.\n   */\n  handleSuccess?: (notificationId: string) => void;\n  /**\n   * A function called whenever handling of an incoming notification fails.\n   * @param notificationId Identifier of the notification.\n   * @param error An error which occurred in form of `NotificationHandlingError` object.\n   */\n  handleError?: (notificationId: string, error: NotificationHandlingError) => void;\n}\n\ntype HandleNotificationEvent = {\n  id: string;\n  notification: Notification;\n};\n\ntype HandleNotificationTimeoutEvent = HandleNotificationEvent;\n\n// Web uses SyntheticEventEmitter\nconst notificationEmitter = new EventEmitter(NotificationsHandlerModule);\n\nconst handleNotificationEventName = 'onHandleNotification';\nconst handleNotificationTimeoutEventName = 'onHandleNotificationTimeout';\n\nlet handleSubscription: Subscription | null = null;\nlet handleTimeoutSubscription: Subscription | null = null;\n\n/**\n * When a notification is received while the app is running, using this function you can set a callback that will decide\n * whether the notification should be shown to the user or not.\n *\n * When a notification is received, `handleNotification` is called with the incoming notification as an argument.\n * The function should respond with a behavior object within 3 seconds, otherwise, the notification will be discarded.\n * If the notification is handled successfully, `handleSuccess` is called with the identifier of the notification,\n * otherwise (or on timeout) `handleError` will be called.\n *\n * The default behavior when the handler is not set or does not respond in time is not to show the notification.\n * @param handler A single parameter which should be either `null` (if you want to clear the handler) or a [`NotificationHandler`](#notificationhandler) object.\n *\n * @example Implementing a notification handler that always shows the notification when it is received.\n * ```jsx\n * import * as Notifications from 'expo-notifications';\n *\n * Notifications.setNotificationHandler({\n *   handleNotification: async () => ({\n *     shouldShowAlert: true,\n *     shouldPlaySound: false,\n *     shouldSetBadge: false,\n *   }),\n * });\n * ```\n * @header inForeground\n */\nexport function setNotificationHandler(handler: NotificationHandler | null): void {\n  if (handleSubscription) {\n    handleSubscription.remove();\n    handleSubscription = null;\n  }\n  if (handleTimeoutSubscription) {\n    handleTimeoutSubscription.remove();\n    handleTimeoutSubscription = null;\n  }\n\n  if (handler) {\n    handleSubscription = notificationEmitter.addListener<HandleNotificationEvent>(\n      handleNotificationEventName,\n      async ({ id, notification }) => {\n        if (!NotificationsHandlerModule.handleNotificationAsync) {\n          handler.handleError?.(\n            id,\n            new UnavailabilityError('Notifications', 'handleNotificationAsync')\n          );\n          return;\n        }\n\n        try {\n          const behavior = await handler.handleNotification(notification);\n          await NotificationsHandlerModule.handleNotificationAsync(id, behavior);\n          handler.handleSuccess?.(id);\n        } catch (error) {\n          handler.handleError?.(id, error);\n        }\n      }\n    );\n\n    handleTimeoutSubscription = notificationEmitter.addListener<HandleNotificationTimeoutEvent>(\n      handleNotificationTimeoutEventName,\n      ({ id, notification }) =>\n        handler.handleError?.(id, new NotificationTimeoutError(id, notification))\n    );\n  }\n}\n"],"mappings":"4kCAAA,OAASA,YAAY,CAAgBC,UAAU,CAAEC,mBAAmB,KAAQ,mBAAmB,CAG/F,MAAO,CAAAC,0BAA0B,oCAKjC,UAAa,CAAAC,wBAAyB,UAAAC,WAAA,EAAAC,SAAA,CAAAF,wBAAA,CAAAC,WAAA,MAAAE,MAAA,CAAAC,YAAA,CAAAJ,wBAAA,EAEpC,SAAAA,yBAAYK,cAAsB,CAAEC,YAA0B,MAAAC,KAAA,CAAAC,eAAA,MAAAR,wBAAA,EAC5DO,KAAA,CAAAJ,MAAA,CAAAM,IAAA,MAAM,0BAA0B,2CAA4CJ,cAAc,MAC1FE,KAAA,CAAKG,IAAI,CAAG,CAAEC,EAAE,CAAEN,cAAc,CAAEC,YAAY,CAAZA,YAAY,CAAE,CAAC,OAAAC,KAAA,CACnD,CAAC,OAAAK,YAAA,CAAAZ,wBAAA,IAL2CH,UAAU,EAuCxD,GAAM,CAAAgB,mBAAmB,CAAG,GAAI,CAAAjB,YAAY,CAACG,0BAA0B,CAAC,CAExE,GAAM,CAAAe,2BAA2B,CAAG,sBAAsB,CAC1D,GAAM,CAAAC,kCAAkC,CAAG,6BAA6B,CAExE,GAAI,CAAAC,kBAAkB,CAAwB,IAAI,CAClD,GAAI,CAAAC,yBAAyB,CAAwB,IAAI,CA4BzD,MAAM,SAAU,CAAAC,sBAAsBA,CAACC,OAAmC,EACxE,GAAIH,kBAAkB,CAAE,CACtBA,kBAAkB,CAACI,MAAM,EAAE,CAC3BJ,kBAAkB,CAAG,IAAI,C,CAE3B,GAAIC,yBAAyB,CAAE,CAC7BA,yBAAyB,CAACG,MAAM,EAAE,CAClCH,yBAAyB,CAAG,IAAI,C,CAGlC,GAAIE,OAAO,CAAE,CACXH,kBAAkB,CAAGH,mBAAmB,CAACQ,WAAW,CAClDP,2BAA2B,gBAAAQ,KAAA,CAAAC,iBAAA,CAC3B,UAAAC,IAAA,CAA+B,IAAtB,CAAAb,EAAE,CAAAa,IAAA,CAAFb,EAAE,CAAEL,YAAY,CAAAkB,IAAA,CAAZlB,YAAY,CACvB,GAAI,CAACP,0BAA0B,CAAC0B,uBAAuB,CAAE,CACvDN,OAAO,CAACO,WAAW,cAAnBP,OAAO,CAACO,WAAW,CACjBf,EAAE,CACF,GAAI,CAAAb,mBAAmB,CAAC,eAAe,CAAE,yBAAyB,CAAC,CACpE,CACD,O,CAGF,GAAI,CACF,GAAM,CAAA6B,QAAQ,MAAS,CAAAR,OAAO,CAACS,kBAAkB,CAACtB,YAAY,CAAC,CAC/D,KAAM,CAAAP,0BAA0B,CAAC0B,uBAAuB,CAACd,EAAE,CAAEgB,QAAQ,CAAC,CACtER,OAAO,CAACU,aAAa,cAArBV,OAAO,CAACU,aAAa,CAAGlB,EAAE,CAAC,C,CAC3B,MAAOmB,KAAK,CAAE,CACdX,OAAO,CAACO,WAAW,cAAnBP,OAAO,CAACO,WAAW,CAAGf,EAAE,CAAEmB,KAAK,CAAC,C,CAEpC,CAAC,kBAAAC,EAAA,SAAAT,KAAA,CAAAU,KAAA,MAAAC,SAAA,QACF,CAEDhB,yBAAyB,CAAGJ,mBAAmB,CAACQ,WAAW,CACzDN,kCAAkC,CAClC,SAAAmB,KAAA,KAAG,CAAAvB,EAAE,CAAAuB,KAAA,CAAFvB,EAAE,CAAEL,YAAY,CAAA4B,KAAA,CAAZ5B,YAAY,OACjB,CAAAa,OAAO,CAACO,WAAW,cAAnBP,OAAO,CAACO,WAAW,CAAGf,EAAE,CAAE,GAAI,CAAAX,wBAAwB,CAACW,EAAE,CAAEL,YAAY,CAAC,CAAC,GAC5E,C,CAEL"},"metadata":{},"sourceType":"module","externalDependencies":[]}