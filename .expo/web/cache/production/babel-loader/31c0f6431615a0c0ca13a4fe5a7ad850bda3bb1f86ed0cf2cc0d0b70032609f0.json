{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import{UnavailabilityError}from'expo-modules-core';import NotificationCategoriesModule from\"./NotificationCategoriesModule.native\";export default function getNotificationCategoriesAsync(){return _getNotificationCategoriesAsync.apply(this,arguments);}function _getNotificationCategoriesAsync(){_getNotificationCategoriesAsync=_asyncToGenerator(function*(){if(!NotificationCategoriesModule.getNotificationCategoriesAsync){throw new UnavailabilityError('Notifications','getNotificationCategoriesAsync');}return yield NotificationCategoriesModule.getNotificationCategoriesAsync();});return _getNotificationCategoriesAsync.apply(this,arguments);}","map":{"version":3,"names":["UnavailabilityError","NotificationCategoriesModule","getNotificationCategoriesAsync","_getNotificationCategoriesAsync","apply","arguments","_asyncToGenerator"],"sources":["/Users/jinwook/react-native/daily-pt-frontend/node_modules/expo-notifications/src/getNotificationCategoriesAsync.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport NotificationCategoriesModule from './NotificationCategoriesModule.native';\nimport { NotificationCategory } from './Notifications.types';\n\n/**\n * Fetches information about all known notification categories.\n * @return A Promise which resolves to an array of `NotificationCategory`s. On platforms that do not support notification channels,\n * it will always resolve to an empty array.\n * @platform android\n * @platform ios\n * @header categories\n */\nexport default async function getNotificationCategoriesAsync(): Promise<NotificationCategory[]> {\n  if (!NotificationCategoriesModule.getNotificationCategoriesAsync) {\n    throw new UnavailabilityError('Notifications', 'getNotificationCategoriesAsync');\n  }\n\n  return await NotificationCategoriesModule.getNotificationCategoriesAsync();\n}\n"],"mappings":"uEAAA,OAASA,mBAAmB,KAAQ,mBAAmB,CAEvD,MAAO,CAAAC,4BAA4B,6CAWnC,uBAA8B,CAAAC,8BAA8BA,CAAA,SAAAC,+BAAA,CAAAC,KAAA,MAAAC,SAAA,GAM3D,SAAAF,gCAAA,EAAAA,+BAAA,CAAAG,iBAAA,CANc,WAA6C,CAC1D,GAAI,CAACL,4BAA4B,CAACC,8BAA8B,CAAE,CAChE,KAAM,IAAI,CAAAF,mBAAmB,CAAC,eAAe,CAAE,gCAAgC,CAAC,C,CAGlF,YAAa,CAAAC,4BAA4B,CAACC,8BAA8B,EAAE,CAC5E,CAAC,SAAAC,+BAAA,CAAAC,KAAA,MAAAC,SAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}