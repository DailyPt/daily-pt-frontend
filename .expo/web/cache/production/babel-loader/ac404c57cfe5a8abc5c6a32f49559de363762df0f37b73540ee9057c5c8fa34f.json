{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";export default function getNotificationChannelGroupAsync(_x){return _getNotificationChannelGroupAsync.apply(this,arguments);}function _getNotificationChannelGroupAsync(){_getNotificationChannelGroupAsync=_asyncToGenerator(function*(groupId){console.debug('Notification channels feature is only supported on Android.');return null;});return _getNotificationChannelGroupAsync.apply(this,arguments);}","map":{"version":3,"names":["getNotificationChannelGroupAsync","_x","_getNotificationChannelGroupAsync","apply","arguments","_asyncToGenerator","groupId","console","debug"],"sources":["/Users/jinwook/react-native/daily-pt-frontend/node_modules/expo-notifications/src/getNotificationChannelGroupAsync.ts"],"sourcesContent":["import { NotificationChannelGroup } from './NotificationChannelGroupManager.types';\n\n/**\n * Fetches information about a single notification channel group.\n * @param groupId The channel group's identifier.\n * @return A Promise which resolves to the channel group object (of type [`NotificationChannelGroup`](#notificationchannelgroup))\n * or to `null` if there was no channel group found for this identifier. On platforms that do not support notification channels,\n * it will always resolve to `null`.\n * @platform android\n * @header channels\n */\nexport default async function getNotificationChannelGroupAsync(\n  groupId: string\n): Promise<NotificationChannelGroup | null> {\n  console.debug('Notification channels feature is only supported on Android.');\n  return null;\n}\n"],"mappings":"uEAWA,uBAA8B,CAAAA,gCAAgCA,CAAAC,EAAA,SAAAC,iCAAA,CAAAC,KAAA,MAAAC,SAAA,GAK7D,SAAAF,kCAAA,EAAAA,iCAAA,CAAAG,iBAAA,CALc,UACbC,OAAe,EAEfC,OAAO,CAACC,KAAK,CAAC,6DAA6D,CAAC,CAC5E,MAAO,KAAI,CACb,CAAC,SAAAN,iCAAA,CAAAC,KAAA,MAAAC,SAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}