{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import{CodedError}from'expo-modules-core';import{v4 as uuidv4}from'uuid';var INSTALLATION_ID_KEY='EXPO_NOTIFICATIONS_INSTALLATION_ID';var REGISTRATION_INFO_KEY='EXPO_NOTIFICATIONS_REGISTRATION_INFO';var _getFallbackInstallationId=function getFallbackInstallationId(){var sessionInstallationId=uuidv4();_getFallbackInstallationId=function getFallbackInstallationId(){return sessionInstallationId;};};export default{getInstallationIdAsync:function(){var _getInstallationIdAsync=_asyncToGenerator(function*(){var installationId;try{installationId=localStorage.getItem(INSTALLATION_ID_KEY);if(!installationId||typeof installationId!=='string'){installationId=uuidv4();localStorage.setItem(INSTALLATION_ID_KEY,installationId);}}catch(_unused){installationId=_getFallbackInstallationId();}return installationId;});function getInstallationIdAsync(){return _getInstallationIdAsync.apply(this,arguments);}return getInstallationIdAsync;}(),getRegistrationInfoAsync:function(){var _getRegistrationInfoAsync=_asyncToGenerator(function*(){return localStorage.getItem(REGISTRATION_INFO_KEY);});function getRegistrationInfoAsync(){return _getRegistrationInfoAsync.apply(this,arguments);}return getRegistrationInfoAsync;}(),setRegistrationInfoAsync:function(){var _setRegistrationInfoAsync=_asyncToGenerator(function*(registrationInfo){try{if(registrationInfo){localStorage.setItem(REGISTRATION_INFO_KEY,registrationInfo);}else{localStorage.removeItem(REGISTRATION_INFO_KEY);}}catch(error){throw new CodedError('ERR_NOTIFICATIONS_STORAGE_ERROR',\"Could not modify localStorage to persist auto-registration information: \"+error);}});function setRegistrationInfoAsync(_x){return _setRegistrationInfoAsync.apply(this,arguments);}return setRegistrationInfoAsync;}(),addListener:function addListener(){},removeListeners:function removeListeners(){}};","map":{"version":3,"names":["CodedError","v4","uuidv4","INSTALLATION_ID_KEY","REGISTRATION_INFO_KEY","getFallbackInstallationId","sessionInstallationId","getInstallationIdAsync","_getInstallationIdAsync","_asyncToGenerator","installationId","localStorage","getItem","setItem","_unused","apply","arguments","getRegistrationInfoAsync","_getRegistrationInfoAsync","setRegistrationInfoAsync","_setRegistrationInfoAsync","registrationInfo","removeItem","error","_x","addListener","removeListeners"],"sources":["/Users/jinwook/react-native/daily-pt-frontend/node_modules/expo-notifications/src/ServerRegistrationModule.web.ts"],"sourcesContent":["import { CodedError } from 'expo-modules-core';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { ServerRegistrationModule } from './ServerRegistrationModule.types';\n\nconst INSTALLATION_ID_KEY = 'EXPO_NOTIFICATIONS_INSTALLATION_ID';\nconst REGISTRATION_INFO_KEY = 'EXPO_NOTIFICATIONS_REGISTRATION_INFO';\n\n// Lazy fallback installationId per session initializer\nlet getFallbackInstallationId = () => {\n  const sessionInstallationId = uuidv4();\n  getFallbackInstallationId = () => sessionInstallationId;\n};\n\nexport default {\n  getInstallationIdAsync: async () => {\n    let installationId;\n\n    try {\n      installationId = localStorage.getItem(INSTALLATION_ID_KEY);\n      if (!installationId || typeof installationId !== 'string') {\n        installationId = uuidv4();\n        localStorage.setItem(INSTALLATION_ID_KEY, installationId);\n      }\n    } catch {\n      installationId = getFallbackInstallationId();\n    }\n\n    return installationId;\n  },\n  getRegistrationInfoAsync: async () => {\n    return localStorage.getItem(REGISTRATION_INFO_KEY);\n  },\n  setRegistrationInfoAsync: async (registrationInfo: string | null) => {\n    try {\n      if (registrationInfo) {\n        localStorage.setItem(REGISTRATION_INFO_KEY, registrationInfo);\n      } else {\n        localStorage.removeItem(REGISTRATION_INFO_KEY);\n      }\n    } catch (error) {\n      throw new CodedError(\n        'ERR_NOTIFICATIONS_STORAGE_ERROR',\n        `Could not modify localStorage to persist auto-registration information: ${error}`\n      );\n    }\n  },\n  // mock implementations\n  addListener: () => {},\n  removeListeners: () => {},\n} as ServerRegistrationModule;\n"],"mappings":"uEAAA,OAASA,UAAU,KAAQ,mBAAmB,CAC9C,OAASC,EAAE,GAAI,CAAAC,MAAM,KAAQ,MAAM,CAInC,GAAM,CAAAC,mBAAmB,CAAG,oCAAoC,CAChE,GAAM,CAAAC,qBAAqB,CAAG,sCAAsC,CAGpE,GAAI,CAAAC,0BAAyB,CAAG,SAAAA,0BAAA,CAAK,CACnC,GAAM,CAAAC,qBAAqB,CAAGJ,MAAM,EAAE,CACtCG,0BAAyB,CAAG,SAAAA,0BAAA,QAAM,CAAAC,qBAAqB,GACzD,CAAC,CAED,cAAe,CACbC,sBAAsB,gBAAAC,uBAAA,CAAAC,iBAAA,CAAE,WAAW,CACjC,GAAI,CAAAC,cAAc,CAElB,GAAI,CACFA,cAAc,CAAGC,YAAY,CAACC,OAAO,CAACT,mBAAmB,CAAC,CAC1D,GAAI,CAACO,cAAc,EAAI,MAAO,CAAAA,cAAc,GAAK,QAAQ,CAAE,CACzDA,cAAc,CAAGR,MAAM,EAAE,CACzBS,YAAY,CAACE,OAAO,CAACV,mBAAmB,CAAEO,cAAc,CAAC,C,EAE3D,MAAAI,OAAA,CAAM,CACNJ,cAAc,CAAGL,0BAAyB,EAAE,C,CAG9C,MAAO,CAAAK,cAAc,CACvB,CAAC,WAAAH,uBAAA,SAAAC,uBAAA,CAAAO,KAAA,MAAAC,SAAA,UAAAT,sBAAA,KACDU,wBAAwB,gBAAAC,yBAAA,CAAAT,iBAAA,CAAE,WAAW,CACnC,MAAO,CAAAE,YAAY,CAACC,OAAO,CAACR,qBAAqB,CAAC,CACpD,CAAC,WAAAa,yBAAA,SAAAC,yBAAA,CAAAH,KAAA,MAAAC,SAAA,UAAAC,wBAAA,KACDE,wBAAwB,gBAAAC,yBAAA,CAAAX,iBAAA,CAAE,UAAOY,gBAA+B,CAAI,CAClE,GAAI,CACF,GAAIA,gBAAgB,CAAE,CACpBV,YAAY,CAACE,OAAO,CAACT,qBAAqB,CAAEiB,gBAAgB,CAAC,C,CAC9D,IAAM,CACLV,YAAY,CAACW,UAAU,CAAClB,qBAAqB,CAAC,C,EAEhD,MAAOmB,KAAK,CAAE,CACd,KAAM,IAAI,CAAAvB,UAAU,CAClB,iCAAiC,4EAC0CuB,KAAK,CACjF,C,CAEL,CAAC,WAAAJ,yBAAAK,EAAA,SAAAJ,yBAAA,CAAAL,KAAA,MAAAC,SAAA,UAAAG,wBAAA,KAEDM,WAAW,CAAE,SAAAA,YAAA,CAAK,CAAE,CAAC,CACrBC,eAAe,CAAE,SAAAA,gBAAA,CAAK,CAAE,C,CACG"},"metadata":{},"sourceType":"module","externalDependencies":[]}