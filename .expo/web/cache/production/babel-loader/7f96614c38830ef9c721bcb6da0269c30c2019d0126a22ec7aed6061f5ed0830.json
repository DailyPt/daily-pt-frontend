{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{StatusBar}from\"expo-status-bar\";import ListFood from\"../../components/ListFood\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import FlatList from\"react-native-web/dist/exports/FlatList\";import Pressable from\"react-native-web/dist/exports/Pressable\";import Text from\"react-native-web/dist/exports/Text\";import{MaterialCommunityIcons}from\"@expo/vector-icons\";import{useNavigation,useRoute}from\"@react-navigation/native\";import{SearchBar}from\"@rneui/themed\";import{useState}from\"react\";import{getFoodList}from\"../../api/food\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddDietTextSearchScreen=function AddDietTextSearchScreen(){var navigation=useNavigation();var route=useRoute();var uri=route.params.uri;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),search=_useState2[0],setSearch=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),searchResults=_useState4[0],setSearchResults=_useState4[1];var updateSearch=function(){var _ref=_asyncToGenerator(function*(search){setSearch(search);try{var foodList=yield getFoodList(search);setSearchResults(foodList);}catch(error){console.log(\"Error fetching food list:\",error);}});return function updateSearch(_x){return _ref.apply(this,arguments);};}();var clearSearch=function clearSearch(){setSearch(\"\");setSearchResults([]);};var _onPress=function onPress(food){navigation.navigate(\"AddDietSetting\",{food:food});};return _jsxs(SafeAreaView,{style:styles.container,children:[_jsxs(View,{style:styles.header,children:[_jsx(View,{style:styles.container}),_jsx(Pressable,{onPress:function onPress(){return navigation.navigate(\"AddDietResult\",{uri:uri});},hitSlop:10,position:\"absolute\",left:\"5%\",bottom:\"15%\",children:_jsx(MaterialCommunityIcons,{name:\"chevron-left\",size:30,color:\"#000\"})}),_jsx(View,{style:{position:\"absolute\",justifyContent:\"center\",alignItems:\"center\",width:Dimensions.get(\"window\").width*0.8,height:80,bottom:\"1%\",right:\"5%\"},children:_jsx(SearchBar,{placeholder:\"\\uC74C\\uC2DD\\uC744 \\uAC80\\uC0C9\\uD558\\uC138\\uC694...\",onChangeText:setSearch,value:search,platform:\"ios\",height:40,onSubmitEditing:function onSubmitEditing(){return updateSearch(search);},onClear:clearSearch})}),_jsx(StatusBar,{style:\"dark\"})]}),searchResults.length?_jsx(View,{style:styles.result,children:_jsx(FlatList,{data:searchResults,keyExtractor:function keyExtractor(item){return item.id.toString();},windowSize:10,renderItem:function renderItem(_ref2){var item=_ref2.item;return _jsx(ListFood,{item:item,onPress:function onPress(){return _onPress(item);}});}})}):_jsx(View,{style:styles.result,children:_jsx(Text,{style:{color:\"#999999\",fontSize:25,marginTop:30,left:\"27%\"},children:\"\\uAC80\\uC0C9 \\uACB0\\uACFC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})})]});};var styles=StyleSheet.create({container:{flex:1,justifyContent:\"center\",alignItems:\"center\"},header:{position:\"absolute\",top:0,left:0,width:Dimensions.get(\"window\").width,height:150,backgroundColor:\"#fff\",justifyContent:\"center\"},result:{flex:1,position:\"absolute\",width:Dimensions.get(\"window\").width,top:150,left:0,bottom:0,right:0,backgroundColor:\"#fff\"}});export default AddDietTextSearchScreen;","map":{"version":3,"names":["StatusBar","ListFood","Dimensions","View","StyleSheet","SafeAreaView","FlatList","Pressable","Text","MaterialCommunityIcons","useNavigation","useRoute","SearchBar","useState","getFoodList","jsx","_jsx","jsxs","_jsxs","AddDietTextSearchScreen","navigation","route","uri","params","_useState","_useState2","_slicedToArray","search","setSearch","_useState3","_useState4","searchResults","setSearchResults","updateSearch","_ref","_asyncToGenerator","foodList","error","console","log","_x","apply","arguments","clearSearch","onPress","food","navigate","style","styles","container","children","header","hitSlop","position","left","bottom","name","size","color","justifyContent","alignItems","width","get","height","right","placeholder","onChangeText","value","platform","onSubmitEditing","onClear","length","result","data","keyExtractor","item","id","toString","windowSize","renderItem","_ref2","fontSize","marginTop","create","flex","top","backgroundColor"],"sources":["/Users/jinwook/react-native/daily-pt-frontend/src/screens/AddDietScreen/AddDietTextSearchScreen.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport ListFood from \"../../components/ListFood\";\nimport {\n  Dimensions,\n  View,\n  StyleSheet,\n  SafeAreaView,\n  FlatList,\n  Pressable,\n  Text,\n} from \"react-native\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { SearchBar } from \"@rneui/themed\";\nimport { useState } from \"react\";\nimport { getFoodList } from \"../../api/food\";\n\nconst AddDietTextSearchScreen = () => {\n  const navigation = useNavigation();\n  const route = useRoute();\n  const { uri } = route.params;\n\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const updateSearch = async (search) => {\n    setSearch(search);\n\n    try {\n      const foodList = await getFoodList(search);\n      setSearchResults(foodList);\n    } catch (error) {\n      console.log(\"Error fetching food list:\", error);\n    }\n  };\n\n  const clearSearch = () => {\n    setSearch(\"\");\n    setSearchResults([]);\n  };\n\n  const onPress = (food) => {\n    navigation.navigate(\"AddDietSetting\", { food });\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.header}>\n        <View style={styles.container}></View>\n        <Pressable\n          onPress={() => navigation.navigate(\"AddDietResult\", { uri: uri })}\n          hitSlop={10}\n          position={\"absolute\"}\n          left={\"5%\"}\n          bottom={\"15%\"}\n        >\n          <MaterialCommunityIcons name=\"chevron-left\" size={30} color=\"#000\" />\n        </Pressable>\n        <View\n          style={{\n            position: \"absolute\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            width: Dimensions.get(\"window\").width * 0.8,\n            height: 80,\n            bottom: \"1%\",\n            right: \"5%\",\n          }}\n        >\n          <SearchBar\n            placeholder=\"음식을 검색하세요...\"\n            onChangeText={setSearch}\n            value={search}\n            platform={\"ios\"}\n            height={40}\n            onSubmitEditing={() => updateSearch(search)}\n            onClear={clearSearch}\n          />\n        </View>\n\n        <StatusBar style=\"dark\" />\n      </View>\n\n      {searchResults.length ? (\n        <View style={styles.result}>\n          <FlatList\n            data={searchResults}\n            keyExtractor={(item) => item.id.toString()}\n            windowSize={10}\n            renderItem={({ item }) => (\n              <ListFood item={item} onPress={() => onPress(item)} />\n            )}\n          />\n        </View>\n      ) : (\n        <View style={styles.result}>\n          <Text\n            style={{\n              color: \"#999999\",\n              fontSize: 25,\n              marginTop: 30,\n              left: \"27%\",\n            }}\n          >\n            검색 결과가 없습니다.\n          </Text>\n        </View>\n      )}\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  header: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: Dimensions.get(\"window\").width,\n    height: 150,\n    backgroundColor: \"#fff\",\n    justifyContent: \"center\",\n  },\n  result: {\n    flex: 1,\n    position: \"absolute\",\n    width: Dimensions.get(\"window\").width,\n    top: 150,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    backgroundColor: \"#fff\",\n  },\n});\n\nexport default AddDietTextSearchScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}