{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import{UnavailabilityError}from'expo-modules-core';import BackgroundNotificationTasksModule from\"./BackgroundNotificationTasksModule.native\";export default function unregisterTaskAsync(_x){return _unregisterTaskAsync.apply(this,arguments);}function _unregisterTaskAsync(){_unregisterTaskAsync=_asyncToGenerator(function*(taskName){if(!BackgroundNotificationTasksModule.unregisterTaskAsync){throw new UnavailabilityError('Notifications','unregisterTaskAsync');}return yield BackgroundNotificationTasksModule.unregisterTaskAsync(taskName);});return _unregisterTaskAsync.apply(this,arguments);}","map":{"version":3,"names":["UnavailabilityError","BackgroundNotificationTasksModule","unregisterTaskAsync","_x","_unregisterTaskAsync","apply","arguments","_asyncToGenerator","taskName"],"sources":["/Users/jinwook/react-native/daily-pt-frontend/node_modules/expo-notifications/src/unregisterTaskAsync.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport BackgroundNotificationTasksModule from './BackgroundNotificationTasksModule.native';\n\n/**\n * Used to unregister tasks registered with `registerTaskAsync` method.\n * @param taskName The string you passed to `registerTaskAsync` as the `taskName` parameter.\n * @header inBackground\n */\nexport default async function unregisterTaskAsync(taskName: string): Promise<null> {\n  if (!BackgroundNotificationTasksModule.unregisterTaskAsync) {\n    throw new UnavailabilityError('Notifications', 'unregisterTaskAsync');\n  }\n\n  return await BackgroundNotificationTasksModule.unregisterTaskAsync(taskName);\n}\n"],"mappings":"uEAAA,OAASA,mBAAmB,KAAQ,mBAAmB,CAEvD,MAAO,CAAAC,iCAAiC,kDAOxC,uBAA8B,CAAAC,mBAAmBA,CAAAC,EAAA,SAAAC,oBAAA,CAAAC,KAAA,MAAAC,SAAA,GAMhD,SAAAF,qBAAA,EAAAA,oBAAA,CAAAG,iBAAA,CANc,UAAmCC,QAAgB,EAChE,GAAI,CAACP,iCAAiC,CAACC,mBAAmB,CAAE,CAC1D,KAAM,IAAI,CAAAF,mBAAmB,CAAC,eAAe,CAAE,qBAAqB,CAAC,C,CAGvE,YAAa,CAAAC,iCAAiC,CAACC,mBAAmB,CAACM,QAAQ,CAAC,CAC9E,CAAC,SAAAJ,oBAAA,CAAAC,KAAA,MAAAC,SAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}