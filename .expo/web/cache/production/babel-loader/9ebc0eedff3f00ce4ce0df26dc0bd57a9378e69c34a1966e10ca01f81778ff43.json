{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import AuthContent from\"../../components/AuthContent\";import{createUser}from\"../../api/auth\";import LoadingOverlay from\"../../components/LoadingOverlay\";import{useContext,useState}from'react';import Alert from\"react-native-web/dist/exports/Alert\";import{AuthContext}from\"../../store/auth-context\";import{jsx as _jsx}from\"react/jsx-runtime\";var SignUpScreen=function SignUpScreen(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isAuthenticating=_useState2[0],setIsAuthenticating=_useState2[1];var authContext=useContext(AuthContext);var signUpHandler=function(){var _ref2=_asyncToGenerator(function*(_ref){var email=_ref.email,password=_ref.password;setIsAuthenticating(true);try{var userCredential=yield createUser(email,password);authContext.authenticate(userCredential);}catch(e){Alert.alert('회원가입 실패','이메일이 이미 존재합니다!');setIsAuthenticating(false);}});return function signUpHandler(_x){return _ref2.apply(this,arguments);};}();if(isAuthenticating){return _jsx(LoadingOverlay,{message:\"\\uAC00\\uC785 \\uC911...\"});}return _jsx(AuthContent,{onAuthenticate:signUpHandler});};export default SignUpScreen;","map":{"version":3,"names":["AuthContent","createUser","LoadingOverlay","useContext","useState","Alert","AuthContext","jsx","_jsx","SignUpScreen","_useState","_useState2","_slicedToArray","isAuthenticating","setIsAuthenticating","authContext","signUpHandler","_ref2","_asyncToGenerator","_ref","email","password","userCredential","authenticate","e","alert","_x","apply","arguments","message","onAuthenticate"],"sources":["/Users/jinwook/react-native/daily-pt-frontend/src/screens/AuthenticationScreen/SignUpScreen.js"],"sourcesContent":["import AuthContent from '../../components/AuthContent';\nimport { createUser } from '../../api/auth';\nimport LoadingOverlay from '../../components/LoadingOverlay';\nimport { useContext, useState } from 'react';\nimport { Alert } from 'react-native';\nimport { AuthContext } from '../../store/auth-context';\n\nconst SignUpScreen = () => {\n  const [isAuthenticating, setIsAuthenticating] = useState(false);\n\n  const authContext = useContext(AuthContext);\n\n  const signUpHandler = async ({ email, password }) => {\n    setIsAuthenticating(true);\n    try {\n      const userCredential = await createUser(email, password);\n      authContext.authenticate(userCredential);\n    } catch (e) {\n      Alert.alert('회원가입 실패', '이메일이 이미 존재합니다!');\n      setIsAuthenticating(false);\n    }\n  };\n\n  if (isAuthenticating) {\n    return <LoadingOverlay message=\"가입 중...\" />;\n  }\n\n  return <AuthContent onAuthenticate={signUpHandler} />;\n};\n\nexport default SignUpScreen;\n"],"mappings":"wIAAA,MAAO,CAAAA,WAAW,oCAClB,OAASC,UAAU,sBACnB,MAAO,CAAAC,cAAc,uCACrB,OAASC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,KAAA,2CAE7C,OAASC,WAAW,gCAAmC,OAAAC,GAAA,IAAAC,IAAA,yBAEvD,GAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAA,CAAS,CACzB,IAAAC,SAAA,CAAgDN,QAAQ,CAAC,KAAK,CAAC,CAAAO,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAxDG,gBAAgB,CAAAF,UAAA,IAAEG,mBAAmB,CAAAH,UAAA,IAE5C,GAAM,CAAAI,WAAW,CAAGZ,UAAU,CAACG,WAAW,CAAC,CAE3C,GAAM,CAAAU,aAAa,gBAAAC,KAAA,CAAAC,iBAAA,CAAG,UAAAC,IAAA,CAA+B,IAAtB,CAAAC,KAAK,CAAAD,IAAA,CAALC,KAAK,CAAEC,QAAQ,CAAAF,IAAA,CAARE,QAAQ,CAC5CP,mBAAmB,CAAC,IAAI,CAAC,CACzB,GAAI,CACF,GAAM,CAAAQ,cAAc,MAAS,CAAArB,UAAU,CAACmB,KAAK,CAAEC,QAAQ,CAAC,CACxDN,WAAW,CAACQ,YAAY,CAACD,cAAc,CAAC,CAC1C,CAAE,MAAOE,CAAC,CAAE,CACVnB,KAAK,CAACoB,KAAK,CAAC,SAAS,CAAE,gBAAgB,CAAC,CACxCX,mBAAmB,CAAC,KAAK,CAAC,CAC5B,CACF,CAAC,iBATK,CAAAE,aAAaA,CAAAU,EAAA,SAAAT,KAAA,CAAAU,KAAA,MAAAC,SAAA,OASlB,CAED,GAAIf,gBAAgB,CAAE,CACpB,MAAO,CAAAL,IAAA,CAACN,cAAc,EAAC2B,OAAO,CAAC,wBAAS,EAAG,CAC7C,CAEA,MAAO,CAAArB,IAAA,CAACR,WAAW,EAAC8B,cAAc,CAAEd,aAAc,EAAG,CACvD,CAAC,CAED,cAAe,CAAAP,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}